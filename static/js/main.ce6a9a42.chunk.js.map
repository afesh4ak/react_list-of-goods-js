{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","getPreparedGoods","goods","sortField","preparedGoods","sort","good1","good2","localeCompare","App","useState","setSortField","isReversed","setIsReversed","visibleGoods","reverse","button","isLight","isResetVisible","className","type","cn","onClick","map","good","id","ReactDOM","render","document","getElementById"],"mappings":"wPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAoB,SAE1B,SAASC,EAAiBC,EAAOC,GAC/B,IAAMC,EAAa,YAAOF,GAiB1B,OAfIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKJ,EACH,OAAOO,EAAME,cAAcD,GAE7B,KAAKP,EACH,OAAOM,EAAMH,GAAaI,EAAMJ,GAElC,QACE,OAAO,MAKRC,EAGF,IAAMK,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOP,EAAP,KAAkBQ,EAAlB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAEMC,EAAeF,EACjB,YAAIX,EAAiBH,EAAiBK,IAAYY,UAClDd,EAAiBH,EAAiBK,GAEhCa,EAAS,SAETC,EAAU,WAIVC,EAAiBpB,EAAgB,KAAOgB,EAAa,GAE3D,OACE,sBAAKK,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACTL,EAbK,UAYM,eAGRC,EAAUd,IAAcJ,IAE7BuB,QAAS,kBAAMX,EAAaZ,IAP9B,iCAYA,wBACEqB,KAAK,SACLD,UAAWE,IACTL,EAvBQ,aAsBG,eAGRC,EAAUd,IAAcH,IAE7BsB,QAAS,kBAAMX,EAAaX,IAP9B,4BAYA,wBACEoB,KAAK,SACLD,UAAWE,IACTL,EAlCQ,aAiCG,eAGRC,GAAWL,IAEhBU,QAAS,kBAAMT,GAAeD,IAPhC,qBAYCM,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPX,EAAa,IACbE,GAAeA,IALnB,sBAaJ,6BACGC,EAAaS,KAAI,SAAAC,GAAI,OACpB,oBAAkB,UAAQ,OAA1B,SACGA,GADMA,EAAKC,aC/GxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ce6a9a42.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = isReversed\n    ? [...getPreparedGoods(goodsFromServer, sortField)].reverse()\n    : getPreparedGoods(goodsFromServer, sortField);\n\n  const button = 'button';\n  const isInfo = 'is-info';\n  const isLight = 'is-light';\n  const isSuccess = 'is-success';\n  const isWarning = 'is-warning';\n\n  const isResetVisible = goodsFromServer[0] !== visibleGoods[0];\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            button,\n            isInfo,\n            { [isLight]: sortField !== SORT_FIELD_ALPHABETICALLY },\n          )}\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            button,\n            isSuccess,\n            { [isLight]: sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            button,\n            isWarning,\n            { [isLight]: !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isResetVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReversed(!setIsReversed);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good.id} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}